{
    "commands" : {
        "selectProject": "Select Docker volume-mountable project:",
        "selectOpenApiDefinition": "Select an Open API Definition:",
        "selectPrimaryLanguage": "Select the primary language for this project:",
        "selectClientGenType" : "Select client generator type",
        "selectServerGenType" : "Select server generator type"
    },
    "wizard": {
        "selectOutputFolder": "Select As Output Folder",
        "errorNoFoldersInWorkspace": "There are no folders in this workspace.  No stub was generated.",
        "promptToOverwrite": "Existing files might be overwritten. Add filters to .openapi-generator-ignore to ensure that the wanted files are not overwritten. Continue?",
        "yes": "Yes",
        "promptToPullImage": "The docker image, openapi-generator-cli, needs to be pulled from dockerhub. Continue?",
        "pullingImage": "Pulling image",
        "generatorRunning": "Generator running",
        "errorNotADefinition": "The selected file {0}, based on its name, is likely not an OpenAPI document.  Choose another file.",
        "promptForDefinition": "Select Definition",
        "errorSelectOnlyFromProject": "Select an OpenAPI definition from the chosen project {0}",
        "errorSelectFolderFromProject": "Select the target output folder from the chosen project {0}",
        "openApiFilter": "OpenAPI Files",
        "existingFilesWarning": "The existing {0} file will be merged with the one that is generated. The original will be backed up. Other files might be overwritten by the generator. Do you want to continue?",
        "existingFilesWarningForSpring": "The existing {0} file will be merged with the one that is generated. The original will be backed up. Other files might be overwritten by the generator. The generated main class will not be registered with Spring. Do you want to continue?",
        "failedToBackupFile": "Error: Codewind failed to back up the current {0} file prior to code generation. A backup is necessary for proper project configuration after code generation. Check the project for any errors.",
        "fileBackedUp": "The original {0} file was backed up successfully as {1}"
    },
    "codeGen": {
        "success": "The {0} stub generated successfully",
        "infoNoGeneratorTypes": "There are no {0} generator types for {1}",
        "failedToGenerateStub": "Failed to generate the {0} stub with error.  Error: {1}",
        "failedNonZeroStatus" : "The {0} stub had a non-zero status code {1} with error {2}"
    },
    "docGen": {
        "success": "The HTML documentation generated successfully",
        "failedToGenerateHtml" : "Failed to generate the HTML documentation. Error: {0}",
        "failedNonZeroStatus" : "The HTML documentation generator had a non-zeron status code {0} with error {1}"
    }
}